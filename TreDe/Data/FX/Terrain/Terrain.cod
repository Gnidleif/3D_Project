//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights;        // Offset:    0, size:   64
    PointLight gPointLights[2];         // Offset:   64, size:  160
    SpotLight gSpotLights[2];           // Offset:  224, size:  192
    float3  gEyePos;                    // Offset:  416, size:   12
}

cbuffer cbPerObject
{
    Material gMaterial;                 // Offset:    0, size:   64
    float4x4 gWorld;                    // Offset:   64, size:   64
    float4x4 gView;                     // Offset:  128, size:   64
    float4x4 gProj;                     // Offset:  192, size:   64
    float4x4 gWorldInvTranspose;        // Offset:  256, size:   64
}

cbuffer cbFixed
{
    float   texScale = 15;              // Offset:    0, size:    4
    float   lightAddScale = 0.400000006;// Offset:    4, size:    4
}

//
// 8 local object(s)
//
Texture2D gBlendMap;
Texture2D gTex0;
Texture2D gTex1;
Texture2D gTex2;
Texture2D gTex3;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
RasterizerState Wireframe
{
    FillMode = uint(WIREFRAME /* 2 */);
    CullMode = uint(BACK /* 3 */);
    FrontCounterClockwise = bool(FALSE /* false */);
    DepthClipEnable = bool(TRUE /* true */);
};
RasterizerState Solidframe
{
    FillMode = uint(SOLID /* 3 */);
    CullMode = uint(BACK /* 3 */);
    FrontCounterClockwise = bool(FALSE /* false */);
    DepthClipEnable = bool(TRUE /* true */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 3 technique(s)
    //
    technique11 Solid
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //
                //   } gMaterial;                       // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gView;                    // Offset:  128 Size:    64
                //   float4x4 gProj;                    // Offset:  192 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float texScale;                    // Offset:    0 Size:     4
                //      = 0x41700000 
                //   float lightAddScale;               // Offset:    4 Size:     4 [unused]
                //      = 0x3ecccccd 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbFixed                           cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1     zw        3     NONE  float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_temps 6
                
                #line 62 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\Terrain\Terrain.fx"
                mul r0.xyzw, cb0[8].xyzw, cb0[12].xxxx
                mul r1.xyzw, cb0[9].xyzw, cb0[12].yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[10].xyzw, cb0[12].zzzz
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[11].xyzw, cb0[12].wwww
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[8].xyzw, cb0[13].xxxx
                mul r2.xyzw, cb0[9].xyzw, cb0[13].yyyy
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[10].xyzw, cb0[13].zzzz
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[11].xyzw, cb0[13].wwww
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[8].xyzw, cb0[14].xxxx
                mul r3.xyzw, cb0[9].xyzw, cb0[14].yyyy
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[10].xyzw, cb0[14].zzzz
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[11].xyzw, cb0[14].wwww
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[8].xyzw, cb0[15].xxxx
                mul r4.xyzw, cb0[9].xyzw, cb0[15].yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[10].xyzw, cb0[15].zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[11].xyzw, cb0[15].wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, r0.xxxx, cb0[4].xyzw
                mul r5.xyzw, r0.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r0.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r0.xyzw, r0.wwww, cb0[7].xyzw
                add r0.xyzw, r0.xyzw, r4.xyzw  // wvp<0:NaN:Inf,4:NaN:Inf,8:NaN:Inf,12:NaN:Inf>
                mul r4.xyzw, r1.xxxx, cb0[4].xyzw
                mul r5.xyzw, r1.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r1.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r1.xyzw, r1.wwww, cb0[7].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // wvp<1:NaN:Inf,5:NaN:Inf,9:NaN:Inf,13:NaN:Inf>
                mul r4.xyzw, r2.xxxx, cb0[4].xyzw
                mul r5.xyzw, r2.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r2.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r2.xyzw, r2.wwww, cb0[7].xyzw
                add r2.xyzw, r2.xyzw, r4.xyzw  // wvp<2:NaN:Inf,6:NaN:Inf,10:NaN:Inf,14:NaN:Inf>
                mul r4.xyzw, r3.xxxx, cb0[4].xyzw
                mul r5.xyzw, r3.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r3.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r3.xyzw, r3.wwww, cb0[7].xyzw
                add r3.xyzw, r3.xyzw, r4.xyzw  // wvp<3:NaN:Inf,7:NaN:Inf,11:NaN:Inf,15:NaN:Inf>
                mov r4.xyz, v0.xyzx
                mov r4.w, l(1.000000)
                dp4 r0.x, r4.xyzw, r0.xyzw  // output<0:NaN:Inf>
                dp4 r0.y, r4.xyzw, r1.xyzw  // output<1:NaN:Inf>
                dp4 r0.z, r4.xyzw, r2.xyzw  // output<2:NaN:Inf>
                dp4 r0.w, r4.xyzw, r3.xyzw  // output<3:NaN:Inf>
                dp4 r1.x, r4.xyzw, cb0[4].xyzw  // output<4:NaN:Inf>
                dp4 r1.y, r4.xyzw, cb0[5].xyzw  // output<5:NaN:Inf>
                dp4 r1.z, r4.xyzw, cb0[6].xyzw  // output<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // output<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // output<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // output<9:NaN:Inf>
                mul r3.xy, v2.xyxx, cb1[0].xxxx  // output<10:Inf,11:Inf>
                mov r3.zw, v2.xxxy  // output<12,13>
                mov o0.xyzw, r0.xyzw  // VSScene<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r3.xyxx  // VSScene<10:Inf,11:Inf>
                mov o3.zw, r3.zzzw  // VSScene<12,13>
                mov o1.xyz, r1.xyzx  // VSScene<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VSScene<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 76 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gBlendMap                         texture  float4          2d    0        1
                // gTex0                             texture  float4          2d    1        1
                // gTex1                             texture  float4          2d    2        1
                // gTex2                             texture  float4          2d    3        1
                // gTex3                             texture  float4          2d    4        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1     zw        3     NONE  float     zw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_resource_texture2d (float,float,float,float) t4
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.zw
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 83 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\Terrain\Terrain.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t1.xyzw, s0  // c0<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t2.xyzw, s0  // c1<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t3.xyzw, s0  // c2<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v3.xyxx, t4.xyzw, s0  // c3<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, v3.zwzz, t0.xyzw, s0
                mov r4.xyz, r4.xyzx  // blend<0:Inf,1:Inf,2:Inf>
                mov r0.xyzw, r0.xyzw  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r5.xyzw, -r0.xyzw
                add r1.xyzw, r1.xyzw, r5.xyzw
                mul r1.xyzw, r1.xyzw, r4.xxxx
                add r0.xyzw, r0.xyzw, r1.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r1.xyzw, -r0.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, r4.yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r1.xyzw, -r0.xyzw
                add r1.xyzw, r1.xyzw, r3.xyzw
                mul r1.xyzw, r1.xyzw, r4.zzzz
                add r0.xyzw, r0.xyzw, r1.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 96
                mov o0.xyzw, r0.xyzw  // PSScene<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            RasterizerState = Solidframe;
        }

    }

    technique11 Wire
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //
                //   } gMaterial;                       // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gView;                    // Offset:  128 Size:    64
                //   float4x4 gProj;                    // Offset:  192 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float texScale;                    // Offset:    0 Size:     4
                //      = 0x41700000 
                //   float lightAddScale;               // Offset:    4 Size:     4 [unused]
                //      = 0x3ecccccd 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbFixed                           cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1     zw        3     NONE  float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_temps 6
                
                #line 62 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\Terrain\Terrain.fx"
                mul r0.xyzw, cb0[8].xyzw, cb0[12].xxxx
                mul r1.xyzw, cb0[9].xyzw, cb0[12].yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[10].xyzw, cb0[12].zzzz
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[11].xyzw, cb0[12].wwww
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[8].xyzw, cb0[13].xxxx
                mul r2.xyzw, cb0[9].xyzw, cb0[13].yyyy
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[10].xyzw, cb0[13].zzzz
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[11].xyzw, cb0[13].wwww
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[8].xyzw, cb0[14].xxxx
                mul r3.xyzw, cb0[9].xyzw, cb0[14].yyyy
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[10].xyzw, cb0[14].zzzz
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[11].xyzw, cb0[14].wwww
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[8].xyzw, cb0[15].xxxx
                mul r4.xyzw, cb0[9].xyzw, cb0[15].yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[10].xyzw, cb0[15].zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[11].xyzw, cb0[15].wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, r0.xxxx, cb0[4].xyzw
                mul r5.xyzw, r0.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r0.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r0.xyzw, r0.wwww, cb0[7].xyzw
                add r0.xyzw, r0.xyzw, r4.xyzw  // wvp<0:NaN:Inf,4:NaN:Inf,8:NaN:Inf,12:NaN:Inf>
                mul r4.xyzw, r1.xxxx, cb0[4].xyzw
                mul r5.xyzw, r1.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r1.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r1.xyzw, r1.wwww, cb0[7].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // wvp<1:NaN:Inf,5:NaN:Inf,9:NaN:Inf,13:NaN:Inf>
                mul r4.xyzw, r2.xxxx, cb0[4].xyzw
                mul r5.xyzw, r2.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r2.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r2.xyzw, r2.wwww, cb0[7].xyzw
                add r2.xyzw, r2.xyzw, r4.xyzw  // wvp<2:NaN:Inf,6:NaN:Inf,10:NaN:Inf,14:NaN:Inf>
                mul r4.xyzw, r3.xxxx, cb0[4].xyzw
                mul r5.xyzw, r3.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r3.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r3.xyzw, r3.wwww, cb0[7].xyzw
                add r3.xyzw, r3.xyzw, r4.xyzw  // wvp<3:NaN:Inf,7:NaN:Inf,11:NaN:Inf,15:NaN:Inf>
                mov r4.xyz, v0.xyzx
                mov r4.w, l(1.000000)
                dp4 r0.x, r4.xyzw, r0.xyzw  // output<0:NaN:Inf>
                dp4 r0.y, r4.xyzw, r1.xyzw  // output<1:NaN:Inf>
                dp4 r0.z, r4.xyzw, r2.xyzw  // output<2:NaN:Inf>
                dp4 r0.w, r4.xyzw, r3.xyzw  // output<3:NaN:Inf>
                dp4 r1.x, r4.xyzw, cb0[4].xyzw  // output<4:NaN:Inf>
                dp4 r1.y, r4.xyzw, cb0[5].xyzw  // output<5:NaN:Inf>
                dp4 r1.z, r4.xyzw, cb0[6].xyzw  // output<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // output<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // output<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // output<9:NaN:Inf>
                mul r3.xy, v2.xyxx, cb1[0].xxxx  // output<10:Inf,11:Inf>
                mov r3.zw, v2.xxxy  // output<12,13>
                mov o0.xyzw, r0.xyzw  // VSScene<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r3.xyxx  // VSScene<10:Inf,11:Inf>
                mov o3.zw, r3.zzzw  // VSScene<12,13>
                mov o1.xyz, r1.xyzx  // VSScene<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VSScene<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 76 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1     zw        3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_output o0.xyzw
                
                #line 96 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\Terrain\Terrain.fx"
                mov o0.xyzw, l(0,0,1.000000,1.000000)  // PSScene<0: 0f,1: 0f,2: 1f,3: 1f>
                ret 
                // Approximately 2 instruction slots used
                            
            };
            RasterizerState = Wireframe;
        }

    }

    technique11 AllLights
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //
                //   } gMaterial;                       // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gView;                    // Offset:  128 Size:    64
                //   float4x4 gProj;                    // Offset:  192 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float texScale;                    // Offset:    0 Size:     4
                //      = 0x41700000 
                //   float lightAddScale;               // Offset:    4 Size:     4 [unused]
                //      = 0x3ecccccd 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbFixed                           cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1     zw        3     NONE  float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_temps 6
                
                #line 62 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\Terrain\Terrain.fx"
                mul r0.xyzw, cb0[8].xyzw, cb0[12].xxxx
                mul r1.xyzw, cb0[9].xyzw, cb0[12].yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[10].xyzw, cb0[12].zzzz
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[11].xyzw, cb0[12].wwww
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[8].xyzw, cb0[13].xxxx
                mul r2.xyzw, cb0[9].xyzw, cb0[13].yyyy
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[10].xyzw, cb0[13].zzzz
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[11].xyzw, cb0[13].wwww
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[8].xyzw, cb0[14].xxxx
                mul r3.xyzw, cb0[9].xyzw, cb0[14].yyyy
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[10].xyzw, cb0[14].zzzz
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[11].xyzw, cb0[14].wwww
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[8].xyzw, cb0[15].xxxx
                mul r4.xyzw, cb0[9].xyzw, cb0[15].yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[10].xyzw, cb0[15].zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[11].xyzw, cb0[15].wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, r0.xxxx, cb0[4].xyzw
                mul r5.xyzw, r0.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r0.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r0.xyzw, r0.wwww, cb0[7].xyzw
                add r0.xyzw, r0.xyzw, r4.xyzw  // wvp<0:NaN:Inf,4:NaN:Inf,8:NaN:Inf,12:NaN:Inf>
                mul r4.xyzw, r1.xxxx, cb0[4].xyzw
                mul r5.xyzw, r1.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r1.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r1.xyzw, r1.wwww, cb0[7].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // wvp<1:NaN:Inf,5:NaN:Inf,9:NaN:Inf,13:NaN:Inf>
                mul r4.xyzw, r2.xxxx, cb0[4].xyzw
                mul r5.xyzw, r2.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r2.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r2.xyzw, r2.wwww, cb0[7].xyzw
                add r2.xyzw, r2.xyzw, r4.xyzw  // wvp<2:NaN:Inf,6:NaN:Inf,10:NaN:Inf,14:NaN:Inf>
                mul r4.xyzw, r3.xxxx, cb0[4].xyzw
                mul r5.xyzw, r3.yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r3.zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r3.xyzw, r3.wwww, cb0[7].xyzw
                add r3.xyzw, r3.xyzw, r4.xyzw  // wvp<3:NaN:Inf,7:NaN:Inf,11:NaN:Inf,15:NaN:Inf>
                mov r4.xyz, v0.xyzx
                mov r4.w, l(1.000000)
                dp4 r0.x, r4.xyzw, r0.xyzw  // output<0:NaN:Inf>
                dp4 r0.y, r4.xyzw, r1.xyzw  // output<1:NaN:Inf>
                dp4 r0.z, r4.xyzw, r2.xyzw  // output<2:NaN:Inf>
                dp4 r0.w, r4.xyzw, r3.xyzw  // output<3:NaN:Inf>
                dp4 r1.x, r4.xyzw, cb0[4].xyzw  // output<4:NaN:Inf>
                dp4 r1.y, r4.xyzw, cb0[5].xyzw  // output<5:NaN:Inf>
                dp4 r1.z, r4.xyzw, cb0[6].xyzw  // output<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // output<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // output<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // output<9:NaN:Inf>
                mul r3.xy, v2.xyxx, cb1[0].xxxx  // output<10:Inf,11:Inf>
                mov r3.zw, v2.xxxy  // output<12,13>
                mov o0.xyzw, r0.xyzw  // VSScene<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r3.xyxx  // VSScene<10:Inf,11:Inf>
                mov o3.zw, r3.zzzw  // VSScene<12,13>
                mov o1.xyz, r1.xyzx  // VSScene<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VSScene<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 76 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float Padding;                 // Offset:   60
                //
                //   } gDirLights;                      // Offset:    0 Size:    64 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:   64
                //       float4 Diffuse;                // Offset:   80
                //       float4 Specular;               // Offset:   96
                //       float3 Position;               // Offset:  112
                //       float Range;                   // Offset:  124
                //       float3 Attenuation;            // Offset:  128
                //       float Padding;                 // Offset:  140
                //
                //   } gPointLights[2];                 // Offset:   64 Size:   160
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  224
                //       float4 Diffuse;                // Offset:  240
                //       float4 Specular;               // Offset:  256
                //       float3 Position;               // Offset:  272
                //       float Range;                   // Offset:  284
                //       float3 Direction;              // Offset:  288
                //       float Spot;                    // Offset:  300
                //       float3 Attenuation;            // Offset:  304
                //       float Padding;                 // Offset:  316
                //
                //   } gSpotLights[2];                  // Offset:  224 Size:   192 [unused]
                //   float3 gEyePos;                    // Offset:  416 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //
                //   } gMaterial;                       // Offset:    0 Size:    64
                //   float4x4 gWorld;                   // Offset:   64 Size:    64 [unused]
                //   float4x4 gView;                    // Offset:  128 Size:    64 [unused]
                //   float4x4 gProj;                    // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float texScale;                    // Offset:    0 Size:     4 [unused]
                //      = 0x41700000 
                //   float lightAddScale;               // Offset:    4 Size:     4
                //      = 0x3ecccccd 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gBlendMap                         texture  float4          2d    0        1
                // gTex0                             texture  float4          2d    1        1
                // gTex1                             texture  float4          2d    2        1
                // gTex2                             texture  float4          2d    3        1
                // gTex3                             texture  float4          2d    4        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                // cbFixed                           cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1     zw        3     NONE  float     zw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[27], immediateIndexed
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_constantbuffer cb2[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_resource_texture2d (float,float,float,float) t4
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.zw
                dcl_output o0.xyzw
                dcl_temps 15
                
                #line 105 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\Terrain\Terrain.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // input<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 111
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t1.xyzw, s0  // c0<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t2.xyzw, s0  // c1<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v3.xyxx, t3.xyzw, s0  // c2<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v3.xyxx, t4.xyzw, s0  // c3<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r5.xyz, v3.zwzz, t0.xyzw, s0
                mov r5.xyz, r5.xyzx  // blend<0:Inf,1:Inf,2:Inf>
                mov r1.xyzw, r1.xyzw  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r6.xyzw, -r1.xyzw
                add r2.xyzw, r2.xyzw, r6.xyzw
                mul r2.xyzw, r2.xyzw, r5.xxxx
                add r1.xyzw, r1.xyzw, r2.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r2.xyzw, -r1.xyzw
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r2.xyzw, r2.xyzw, r5.yyyy
                add r1.xyzw, r1.xyzw, r2.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r2.xyzw, -r1.xyzw
                add r2.xyzw, r2.xyzw, r4.xyzw
                mul r2.xyzw, r2.xyzw, r5.zzzz
                add r1.xyzw, r1.xyzw, r2.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 129
                mov r2.xyz, -v1.xyzx
                add r2.xyz, r2.xyzx, cb0[26].xyzx
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r0.w, r0.w
                mul r2.xyz, r0.wwww, r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 150
                nop 
                mov r3.xyz, cb1[0].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[1].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[2].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[4].xyzx  // light<0,1,2>
                mov r7.xyz, cb0[5].xyzx  // light<4,5,6>
                mov r8.xyz, cb0[6].xyzx  // light<8,9,10>
                mov r9.xyz, cb0[7].xyzx  // light<12,13,14>
                mov r0.w, cb0[7].w  // light<15>
                mov r10.xyz, cb0[8].xyzx  // light<16,17,18>
                mov r11.xyz, v1.xyzx  // pos<0,1,2>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, -r2.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 112 "../LightDef.fx"
                mov r11.xyz, -r11.xyzx
                add r9.xyz, r9.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 115
                dp3 r2.w, r9.xyzx, r9.xyzx
                sqrt r12.y, r2.w  // dist<0:NaN:Inf>
                
                #line 118
                lt r0.w, r0.w, r12.y
                
                #line 122
                if_z r0.w
                  div r9.xyz, r9.xyzx, r12.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 125
                  mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 128
                  dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 131
                  lt r2.w, l(0.000000), r0.w
                  mov r9.xyz, -r9.xyzx
                  dp3 r3.w, r9.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r13.xyz, r0.xyzx, r3.wwww
                  add r9.xyz, r9.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r3.w, r9.xyzx, r2.xyzx
                  max r3.w, r3.w, l(0.000000)
                  log r3.w, r3.w
                  mul r3.w, r3.w, r5.w
                  exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r4.xyzx, r0.wwww
                  mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r9.xyz, r5.xyzx, r3.wwww
                  mul r8.xyz, r8.xyzx, r9.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 131
                  movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r8.xyz, r2.wwww, r8.xyzx, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 141
                  mul r12.z, r12.y, r12.y
                  mov r12.x, l(1.000000)
                  dp3 r0.w, r10.xyzx, r12.xyzx
                  div r0.w, l(1.000000), r0.w  // atten<0:NaN:Inf>
                  mul r7.xyz, r0.wwww, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r8.xyz, r0.wwww, r8.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 122
                else 
                  mov r6.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r7.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r8.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 150 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\Terrain\Terrain.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 150
                nop 
                mov r9.xyz, cb0[9].xyzx  // light<0,1,2>
                mov r10.xyz, cb0[10].xyzx  // light<4,5,6>
                mov r12.xyz, cb0[11].xyzx  // light<8,9,10>
                mov r13.xyz, cb0[12].xyzx  // light<12,13,14>
                mov r0.w, cb0[12].w  // light<15>
                mov r14.xyz, cb0[13].xyzx  // light<16,17,18>
                
                #line 112 "../LightDef.fx"
                add r11.xyz, r11.xyzx, r13.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 115
                dp3 r2.w, r11.xyzx, r11.xyzx
                sqrt r13.y, r2.w  // dist<0:NaN:Inf>
                
                #line 118
                lt r0.w, r0.w, r13.y
                
                #line 122
                if_z r0.w
                  div r11.xyz, r11.xyzx, r13.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 125
                  mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 128
                  dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 131
                  lt r2.w, l(0.000000), r0.w
                  mov r9.xyz, -r11.xyzx
                  dp3 r3.w, r9.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r0.xyz, r0.xyzx, r3.wwww
                  add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r2.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r5.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r4.xxyz, r0.wwww
                  mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r2.xyz, r5.xyzx, r0.xxxx
                  mul r2.xyz, r12.xyzx, r2.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 131
                  movc r0.xyz, r2.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r2.xyz, r2.wwww, r2.xyzx, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 141
                  mul r13.z, r13.y, r13.y
                  mov r13.x, l(1.000000)
                  dp3 r0.w, r14.xyzx, r13.xyzx
                  div r0.w, l(1.000000), r0.w  // atten<0:NaN:Inf>
                  mul r0.xyz, r0.wwww, r0.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r2.xyz, r0.wwww, r2.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 122
                else 
                  mov r3.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r2.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 150 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\Terrain\Terrain.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, r2.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r2.xyz, r2.xyzx, r8.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 168
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r1.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 172
                mul r0.w, r1.w, cb1[1].w  // litColor<3:NaN:Inf>
                mul r1.xyzw, r1.xyzw, cb2[0].yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o0.xyzw, r0.xyzw  // PSScene_Lights<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 142 instruction slots used
                            
            };
            AB_BlendFactor = float4(0, 0, 0, 0);
            AB_SampleMask = uint(0xffffffff);
            BlendState = NULL;
            RasterizerState = Solidframe;
        }

    }

}

