//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    float3  gEyePos;                    // Offset:    0, size:   12
    float   gHeightScale;               // Offset:   12, size:    4
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gView;                     // Offset:   64, size:   64
    float4x4 gProj;                     // Offset:  128, size:   64
    float4x4 gWorldInvTranspose;        // Offset:  192, size:   64
}

//
// 4 local object(s)
//
Texture2D gDiffMap;
Texture2D gNormMap;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
RasterizerState Depth
{
    DepthBias = uint(10000);
    DepthBiasClamp = float(0);
    SlopeScaledDepthBias = float(1);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 2 technique(s)
    //
    technique11 Build
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float3 gEyePos;                    // Offset:    0 Size:    12
                //   float gHeightScale;                // Offset:   12 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gView;                    // Offset:   64 Size:    64
                //   float4x4 gProj;                    // Offset:  128 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  192 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormMap                          texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyzw        3     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1], immediateIndexed
                dcl_constantbuffer cb1[15], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 48 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\ShadowMap\ShadowMap.fx"
                mul r0.xyzw, cb1[4].xyzw, cb1[8].xxxx
                mul r1.xyzw, cb1[5].xyzw, cb1[8].yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb1[6].xyzw, cb1[8].zzzz
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb1[7].xyzw, cb1[8].wwww
                add r0.xyzw, r0.xyzw, r1.xyzw  // vp<0:NaN:Inf,4:NaN:Inf,8:NaN:Inf,12:NaN:Inf>
                mul r1.xyzw, cb1[4].xyzw, cb1[9].xxxx
                mul r2.xyzw, cb1[5].xyzw, cb1[9].yyyy
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb1[6].xyzw, cb1[9].zzzz
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb1[7].xyzw, cb1[9].wwww
                add r1.xyzw, r1.xyzw, r2.xyzw  // vp<1:NaN:Inf,5:NaN:Inf,9:NaN:Inf,13:NaN:Inf>
                mul r2.xyzw, cb1[4].xyzw, cb1[10].xxxx
                mul r3.xyzw, cb1[5].xyzw, cb1[10].yyyy
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb1[6].xyzw, cb1[10].zzzz
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb1[7].xyzw, cb1[10].wwww
                add r2.xyzw, r2.xyzw, r3.xyzw  // vp<2:NaN:Inf,6:NaN:Inf,10:NaN:Inf,14:NaN:Inf>
                mul r3.xyzw, cb1[4].xyzw, cb1[11].xxxx
                mul r4.xyzw, cb1[5].xyzw, cb1[11].yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb1[6].xyzw, cb1[11].zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb1[7].xyzw, cb1[11].wwww
                add r3.xyzw, r3.xyzw, r4.xyzw  // vp<3:NaN:Inf,7:NaN:Inf,11:NaN:Inf,15:NaN:Inf>
                mov r4.xyz, v0.xyzx
                mov r4.w, l(1.000000)
                dp4 r0.x, r4.xyzw, r0.xyzw  // output<0:NaN:Inf>
                dp4 r0.y, r4.xyzw, r1.xyzw  // output<1:NaN:Inf>
                dp4 r0.z, r4.xyzw, r2.xyzw  // output<2:NaN:Inf>
                dp4 r0.w, r4.xyzw, r3.xyzw  // output<3:NaN:Inf>
                dp4 r1.x, r4.xyzw, cb1[0].xyzw  // output<4:NaN:Inf>
                dp4 r1.y, r4.xyzw, cb1[1].xyzw  // output<5:NaN:Inf>
                dp4 r1.z, r4.xyzw, cb1[2].xyzw  // output<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb1[12].xyzx  // output<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb1[13].xyzx  // output<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb1[14].xyzx  // output<9:NaN:Inf>
                dp3 r1.w, r2.xyzx, r2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, r2.xyzx  // output<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r3.xy, v2.xyxx  // output<10,11>
                dp4 r4.x, v3.xyzw, cb1[0].xyzw  // output<12:NaN:Inf>
                dp4 r4.y, v3.xyzw, cb1[1].xyzw  // output<13:NaN:Inf>
                dp4 r4.z, v3.xyzw, cb1[2].xyzw  // output<14:NaN:Inf>
                dp4 r4.w, v3.xyzw, cb1[3].xyzw  // output<15:NaN:Inf>
                
                #line 61
                mov r5.xyz, -cb0[0].xyzx
                add r5.xyz, r1.xyzx, r5.xyzx
                dp3 r1.w, r5.xyzx, r5.xyzx
                sqrt r1.w, r1.w
                add r1.w, r1.w, l(-20.000000)
                div r1.w, r1.w, l(20.000000)
                max r1.w, r1.w, l(0.000000)
                min r1.w, r1.w, l(6.000000)  // mipLevel<0:[-0f,6f]>
                
                #line 64
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xyzw, s0, r1.w
                mov r1.w, r1.w  // height<0:Inf>
                add r1.w, r1.w, l(-1.000000)
                mul r1.w, r1.w, cb0[0].w
                mul r5.xyz, r2.xyzx, r1.wwww
                add r1.xyz, r1.xyzx, r5.xyzx  // output<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o0.xyzw, r0.xyzw  // ShadowVSScene<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // ShadowVSScene<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // ShadowVSScene<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // ShadowVSScene<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r3.xyxx  // ShadowVSScene<10,11>
                ret 
                // Approximately 68 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = NULL;
            RasterizerState = Depth;
        }

    }

    technique11 BuildAlpha
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float3 gEyePos;                    // Offset:    0 Size:    12
                //   float gHeightScale;                // Offset:   12 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gView;                    // Offset:   64 Size:    64
                //   float4x4 gProj;                    // Offset:  128 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  192 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gNormMap                          texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyzw        3     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1], immediateIndexed
                dcl_constantbuffer cb1[15], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 48 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\ShadowMap\ShadowMap.fx"
                mul r0.xyzw, cb1[4].xyzw, cb1[8].xxxx
                mul r1.xyzw, cb1[5].xyzw, cb1[8].yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb1[6].xyzw, cb1[8].zzzz
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb1[7].xyzw, cb1[8].wwww
                add r0.xyzw, r0.xyzw, r1.xyzw  // vp<0:NaN:Inf,4:NaN:Inf,8:NaN:Inf,12:NaN:Inf>
                mul r1.xyzw, cb1[4].xyzw, cb1[9].xxxx
                mul r2.xyzw, cb1[5].xyzw, cb1[9].yyyy
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb1[6].xyzw, cb1[9].zzzz
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb1[7].xyzw, cb1[9].wwww
                add r1.xyzw, r1.xyzw, r2.xyzw  // vp<1:NaN:Inf,5:NaN:Inf,9:NaN:Inf,13:NaN:Inf>
                mul r2.xyzw, cb1[4].xyzw, cb1[10].xxxx
                mul r3.xyzw, cb1[5].xyzw, cb1[10].yyyy
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb1[6].xyzw, cb1[10].zzzz
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb1[7].xyzw, cb1[10].wwww
                add r2.xyzw, r2.xyzw, r3.xyzw  // vp<2:NaN:Inf,6:NaN:Inf,10:NaN:Inf,14:NaN:Inf>
                mul r3.xyzw, cb1[4].xyzw, cb1[11].xxxx
                mul r4.xyzw, cb1[5].xyzw, cb1[11].yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb1[6].xyzw, cb1[11].zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb1[7].xyzw, cb1[11].wwww
                add r3.xyzw, r3.xyzw, r4.xyzw  // vp<3:NaN:Inf,7:NaN:Inf,11:NaN:Inf,15:NaN:Inf>
                mov r4.xyz, v0.xyzx
                mov r4.w, l(1.000000)
                dp4 r0.x, r4.xyzw, r0.xyzw  // output<0:NaN:Inf>
                dp4 r0.y, r4.xyzw, r1.xyzw  // output<1:NaN:Inf>
                dp4 r0.z, r4.xyzw, r2.xyzw  // output<2:NaN:Inf>
                dp4 r0.w, r4.xyzw, r3.xyzw  // output<3:NaN:Inf>
                dp4 r1.x, r4.xyzw, cb1[0].xyzw  // output<4:NaN:Inf>
                dp4 r1.y, r4.xyzw, cb1[1].xyzw  // output<5:NaN:Inf>
                dp4 r1.z, r4.xyzw, cb1[2].xyzw  // output<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb1[12].xyzx  // output<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb1[13].xyzx  // output<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb1[14].xyzx  // output<9:NaN:Inf>
                dp3 r1.w, r2.xyzx, r2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, r2.xyzx  // output<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r3.xy, v2.xyxx  // output<10,11>
                dp4 r4.x, v3.xyzw, cb1[0].xyzw  // output<12:NaN:Inf>
                dp4 r4.y, v3.xyzw, cb1[1].xyzw  // output<13:NaN:Inf>
                dp4 r4.z, v3.xyzw, cb1[2].xyzw  // output<14:NaN:Inf>
                dp4 r4.w, v3.xyzw, cb1[3].xyzw  // output<15:NaN:Inf>
                
                #line 61
                mov r5.xyz, -cb0[0].xyzx
                add r5.xyz, r1.xyzx, r5.xyzx
                dp3 r1.w, r5.xyzx, r5.xyzx
                sqrt r1.w, r1.w
                add r1.w, r1.w, l(-20.000000)
                div r1.w, r1.w, l(20.000000)
                max r1.w, r1.w, l(0.000000)
                min r1.w, r1.w, l(6.000000)  // mipLevel<0:[-0f,6f]>
                
                #line 64
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xyzw, s0, r1.w
                mov r1.w, r1.w  // height<0:Inf>
                add r1.w, r1.w, l(-1.000000)
                mul r1.w, r1.w, cb0[0].w
                mul r5.xyz, r2.xyzx, r1.wwww
                add r1.xyz, r1.xyzx, r5.xyzx  // output<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o0.xyzw, r0.xyzw  // ShadowVSScene<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // ShadowVSScene<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // ShadowVSScene<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // ShadowVSScene<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r3.xyxx  // ShadowVSScene<10,11>
                ret 
                // Approximately 68 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffMap                          texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyzw        4     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // no Output
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_temps 1
                
                #line 74 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\ShadowMap\ShadowMap.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.x, v3.xyxx, t0.wxyz, s0
                mov r0.x, r0.x  // diffuse<3:Inf>
                add r0.x, r0.x, l(-0.150000)
                lt r0.x, r0.x, l(0.000000)
                and r0.x, r0.x, l(-1)
                discard r0.x
                
                #line 72
                ret 
                // Approximately 7 instruction slots used
                            
            };
            RasterizerState = Depth;
        }

    }

}

