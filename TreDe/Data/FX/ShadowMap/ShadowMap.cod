//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbEveryFrame
{
    float3  gLightPos;                  // Offset:    0, size:   12
    float4x4 gShadowWorld;              // Offset:   16, size:   64
    float4x4 gShadowView;               // Offset:   80, size:   64
    float4x4 gShadowProj;               // Offset:  144, size:   64
    uint    gResX;                      // Offset:  208, size:    4
    uint    gResY;                      // Offset:  212, size:    4
}

//
// 4 local object(s)
//
Texture2D gShadowMap;
SamplerState samShadow
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerComparisonState samComp
{
    Filter   = uint(COMPARISON_MIN_MAG_MIP_LINEAR /* 149 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
    ComparisonFunc = uint(LESS_EQUAL /* 4 */);
};
RasterizerState Backface
{
    CullMode = uint(BACK /* 3 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 ShadowTech
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbEveryFrame
                // {
                //
                //   float3 gLightPos;                  // Offset:    0 Size:    12 [unused]
                //   float4x4 gShadowWorld;             // Offset:   16 Size:    64
                //   float4x4 gShadowView;              // Offset:   80 Size:    64
                //   float4x4 gShadowProj;              // Offset:  144 Size:    64
                //   uint gResX;                        // Offset:  208 Size:     4 [unused]
                //   uint gResY;                        // Offset:  212 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbEveryFrame                      cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_temps 6
                
                #line 51 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\ShadowMap\ShadowMap.fx"
                mul r0.xyzw, cb0[5].xyzw, cb0[9].xxxx
                mul r1.xyzw, cb0[6].xyzw, cb0[9].yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[7].xyzw, cb0[9].zzzz
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[8].xyzw, cb0[9].wwww
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[5].xyzw, cb0[10].xxxx
                mul r2.xyzw, cb0[6].xyzw, cb0[10].yyyy
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[7].xyzw, cb0[10].zzzz
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[8].xyzw, cb0[10].wwww
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[5].xyzw, cb0[11].xxxx
                mul r3.xyzw, cb0[6].xyzw, cb0[11].yyyy
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[7].xyzw, cb0[11].zzzz
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[8].xyzw, cb0[11].wwww
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[5].xyzw, cb0[12].xxxx
                mul r4.xyzw, cb0[6].xyzw, cb0[12].yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[7].xyzw, cb0[12].zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[8].xyzw, cb0[12].wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, r0.xxxx, cb0[1].xyzw
                mul r5.xyzw, r0.yyyy, cb0[2].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r0.zzzz, cb0[3].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r0.xyzw, r0.wwww, cb0[4].xyzw
                add r0.xyzw, r0.xyzw, r4.xyzw  // wvp<0:NaN:Inf,4:NaN:Inf,8:NaN:Inf,12:NaN:Inf>
                mul r4.xyzw, r1.xxxx, cb0[1].xyzw
                mul r5.xyzw, r1.yyyy, cb0[2].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r1.zzzz, cb0[3].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r1.xyzw, r1.wwww, cb0[4].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // wvp<1:NaN:Inf,5:NaN:Inf,9:NaN:Inf,13:NaN:Inf>
                mul r4.xyzw, r2.xxxx, cb0[1].xyzw
                mul r5.xyzw, r2.yyyy, cb0[2].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r2.zzzz, cb0[3].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r2.xyzw, r2.wwww, cb0[4].xyzw
                add r2.xyzw, r2.xyzw, r4.xyzw  // wvp<2:NaN:Inf,6:NaN:Inf,10:NaN:Inf,14:NaN:Inf>
                mul r4.xyzw, r3.xxxx, cb0[1].xyzw
                mul r5.xyzw, r3.yyyy, cb0[2].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r3.zzzz, cb0[3].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r3.xyzw, r3.wwww, cb0[4].xyzw
                add r3.xyzw, r3.xyzw, r4.xyzw  // wvp<3:NaN:Inf,7:NaN:Inf,11:NaN:Inf,15:NaN:Inf>
                mov r4.xyz, v0.xyzx
                mov r4.w, l(1.000000)
                dp4 r0.x, r4.xyzw, r0.xyzw  // output<0:NaN:Inf>
                dp4 r0.y, r4.xyzw, r1.xyzw  // output<1:NaN:Inf>
                dp4 r0.z, r4.xyzw, r2.xyzw  // output<2:NaN:Inf>
                dp4 r0.w, r4.xyzw, r3.xyzw  // output<3:NaN:Inf>
                mov o0.xyzw, r0.xyzw  // ShadowVSScene<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 64 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_output o0.xyzw
                
                #line 59 "C:\Users\Gnidleif\Documents\GitHub\3D_Project\TreDe\Data\FX\ShadowMap\ShadowMap.fx"
                mov o0.xyzw, l(0,0,0,0)  // ShadowPSScene<0: 0f,1: 0f,2: 0f,3: 0f>
                ret 
                // Approximately 2 instruction slots used
                            
            };
            RasterizerState = Backface;
        }

    }

}

